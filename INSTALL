#!/bin/bash

# no public access for new files, just in case
umask 077

# unpack the package content into "/opt/acme-wrapper/", overwriting any
# conflicting files

# install dependencies
apt-get install \
    coreutils \
    curl \
    openssl \
    sed \

# create user if not exists
id acme-wrapper > /dev/null 2>&1
[[ "$?" -eq 0 ]] || {
    adduser --system \
        --home /opt/acme-wrapper \
        --no-create-home \
        --shell /bin/false \
        --group \
        --disabled-password \
        --disabled-login \
        --gecos "user for automatic ssl-certificate updater and database" \
        acme-wrapper
}


# use default configuration if no config exists from before
[[ -e /opt/acme-wrapper/etc/acme-wrapper.conf ]] || {
    cp /opt/acme-wrapper/etc/acme-wrapper.conf-dist \
       /opt/acme-wrapper/etc/acme-wrapper.conf
}

# begin with empty domains.list
[[ -e /opt/acme-wrapper/etc/domains.list ]] || {
    cp /opt/acme-wrapper/etc/domains.list-dist \
       /opt/acme-wrapper/etc/domains.list
}

# set proper ownership and access rights
touch /opt/acme-wrapper/.rnd
chown -R root:acme-wrapper /opt/acme-wrapper
chown    acme-wrapper /opt/acme-wrapper/.rnd
chmod -R u+rwX,g+rX,o-rwx /opt/acme-wrapper
chown -R acme-wrapper:acme-wrapper /opt/acme-wrapper/{database,letsencrypt-account,spool}
chmod -R g+rwX /opt/acme-wrapper/{database,letsencrypt-account,spool}
chmod    ug+x /opt/acme-wrapper/{acme-wrapper,acme-tiny/acme_tiny.py}

# grant write access to the challenge dir
[[ -e /opt/acme-wrapper/etc/acme-wrapper.conf ]] && (
    source /opt/acme-wrapper/etc/acme-wrapper.conf
    chown -R acme-wrapper:www-data "${ACME_CHALLENGE_DIR}"
    chmod    g+rsX                 "${ACME_CHALLENGE_DIR}"
)



## optionally use cron
#cp /opt/acme-wrapper/lib/crontab.example /etc/cron.d/acme-wrapper
